# -*- coding: utf-8 -*-
"""API.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OumPN1OiSGwvKwK9CR4-CcUB7C3gjK5T
"""

from gtts import gTTS
from IPython.display import Audio
import tempfile

def speak_telugu(text):
    # Step 1: Convert text to Telugu TTS
    tts = gTTS(text=text, lang='te')

    # Step 2: Save to a temporary file (auto-cleaned, no manual handling)
    with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as fp:
        tts.save(fp.name)
        return Audio(fp.name, autoplay=True)

from fastapi import FastAPI
from pydantic import BaseModel
import uvicorn
import nest_asyncio
from pyngrok import ngrok
from fastapi.middleware.cors import CORSMiddleware
from gtts import gTTS
from IPython.display import Audio
import tempfile
import base64
import io

nest_asyncio.apply()

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

class QueryInput(BaseModel):
    question: str

# Your existing TTS function adapted to return base64 audio string (better for API response)
def speak_telugu(text):
    tts = gTTS(text=text, lang='te')
    audio_fp = io.BytesIO()
    tts.write_to_fp(audio_fp)
    audio_fp.seek(0)
    audio_base64 = base64.b64encode(audio_fp.read()).decode('utf-8')
    return audio_base64

@app.post("/generate")
async def generate_route(query: QueryInput):
    src_sentence = query.question

    # Your existing answer generation pipeline (placeholder)
    answer = generate_answer(model, src_sentence, vocab, vocab, tokenizer_en, device=device)
    prettified = prettify_text(answer)
    translated_text = translate_multiline(prettified, models, device, vocab_src, vocab_trg, tokenizer_te)

    # Get audio in base64
    audio_base64 = speak_telugu(translated_text)

    return {
        "question": src_sentence,
        "answer": translated_text,
        "audio_base64": audio_base64,
    }

# Start ngrok tunnel and Uvicorn server
public_url = ngrok.connect(8000)
print("ðŸš€ FastAPI app running at:", public_url)

uvicorn.run(app, port=8000)